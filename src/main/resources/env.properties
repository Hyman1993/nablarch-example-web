##
## 開発環境用設定ファイル
##

# JNDIでDataSourceを取得する際のリソース名
nablarch.connectionFactory.jndiResourceName=

# JDBC接続ドライバクラス(DataSourceを直接使用する際の項目)
# (開発時にJNDIを使用するのは煩雑であるため、開発環境のみDataSourceを直接使用する。)
nablarch.db.jdbcDriver=org.postgresql.Driver

# jdbc:postgresql://ホスト名:ポート番号/データベース名
nablarch.db.url=jdbc:postgresql://nabcn-xray-performance-db.ckmihv1hbh8c.ap-northeast-1.rds.amazonaws.com:5432/performance

# DB接続ユーザ名(DataSourceを直接使用する際の項目)
nablarch.db.user=postgres

# DB接続パスワード(DataSourceを直接使用する際の項目)
nablarch.db.password=postgres

# DBスキーマ名(DataSourceを直接使用する際の項目)
nablarch.db.schema=public

# 最大プールサイズ(DataSourceを直接使用する際の項目)
nablarch.db.maxPoolSize=200

# 出力ファイルの出力先ディレクトリ
nablarch.filePathSetting.basePathSettings.output=file:./work/output

# メッセージ同期送信テストデータ格納ディレクトリ
nablarch.file.path.sendSyncTestData=classpath:test-data

# アップロードファイルの自動クリーニングを行うかどうか
# (ディスクを逼迫するので本番環境ではtrue。開発環境ではファイルを確認できるようにfalseとする。)
nablarch.uploadSettings.autoCleaning=false

# アップロードファイル一時ディレクトリ
nablarch.filePathSetting.basePathSettings.uploadFileTmpDir=file:./work/tmp

aws.xray.enabled=true

api.example.rest=http://26.163.129.4:8080/example-rest/projects